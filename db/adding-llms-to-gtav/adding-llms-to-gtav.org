#+title: Adding LLMs to GTA V
#+OPTIONS: num:nil toc:nil postamble:t title:nil
#+HTML_HEAD: <link rel="stylesheet" type="text/css" href="../../styles.css" />

** Adding LLMs to GTA V
StreetSmarts, a GTA mod inspired by [[https://www.gta5-mods.com/scripts/inworld-sentient-streets-ai-story-mode][SentientStreets]]

#+HTML: <div class="center-iframe"><iframe width="560" height="315" src="https://www.youtube.com/embed/SWxu3YMNmgk?si=KAhGVjKTT_S9m2tq" title="YouTube video player" frameborder="0" allow="accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture; web-share" referrerpolicy="strict-origin-when-cross-origin" allowfullscreen></iframe></div>

Character output is generated by [[https://ai.meta.com/blog/meta-llama-3/][LLaMA 3 8B Instruct]] running on an M1 Mac.

Modding GTA V is mature nowadays, so it was fairly straightforward to get a dev loop
running with [[https://github.com/scripthookvdotnet/scripthookvdotnet/releases][ScriptHookVDotNet]] and start modding. It's even easier when documentation
[[https://nitanmarcel.github.io/scripthookvdotnet/scripting_v3/index.html][looks like this.]]

Recurring characters are scattered throughout the map with saved chats, which means you can continue
conversations with them and build relationships. Conversations with non-recurring characters (like
random pedestrians) aren't saved.

For those unfamiliar with LLMs, the outputs of a model can be tweaked via the system prompt.
Here the model can be guided to output only in JSON, only speak in pig latin, or in this case,
roleplay as a character within Los Santos.

#+ATTR_HTML: :class center-image :width 600px :height: 400px
#+CAPTION: Recurring characters are blips on the map. Metadata like name, location, and personality is stored in separate files for each character.
[[./images/1.png]]

NPCs can also take actions based on the state of the conversation. Currently there's 3 actions: fight,
follow, and run away. Some characters run away when threatened, and others are easily angered
and resort to fighting. More outgoing characters are likely to accept an invitation somewhere,
while others aren't so interested.

I went down different rabbit holes trying to figure out the best way to calculate whether a
character should take an action based on the conversation state. From emotion detection models to
sentiment analysis to finetuning a custom BERT, it turns out the best solution is to use what
I already had, LLaMA 3. That's right, each output from the model is then fed back into the model
to output a probabilities for fear, anger, follow. The output looks something like this:
#+BEGIN_SRC json
{"angry": 0.92, "scared": 0.15}
#+END_SRC

The results were suprisingly accurate; if I were to guess, around 90% of the actions taken
(attacking or running away from the player) felt normal and not out of the ordinary. Another example
of the wide variety of tasks a good LLM can handle.

I stopped working on the mod for now, but there's still more to do:
- Voice input
- Text-to-speech output
- Use a better model, like Gemini Flash, which is faster and has vision capabilities
- More actions (cheer, dance, shoot, lead, etc)
- Custom missions

Time for me to work on other stuff, but this mini project showed me that the sextuple-A
games of the future will use language models, and it's only going to get better.
